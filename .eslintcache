[{"E:\\todolist-react\\todo-app\\src\\index.js":"1","E:\\todolist-react\\todo-app\\src\\App.js":"2","E:\\todolist-react\\todo-app\\src\\reportWebVitals.js":"3","E:\\todolist-react\\todo-app\\src\\Listitems.js":"4","E:\\todolist-react\\todo-app\\src\\ListItems.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2086,"mtime":1607621967448,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":405,"mtime":1607612765156,"results":"10","hashOfConfig":"7"},{"size":1003,"mtime":1607618205399,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mstl5l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\todolist-react\\todo-app\\src\\index.js",[],["24","25"],"E:\\todolist-react\\todo-app\\src\\App.js",["26"],"import React from 'react'\nimport './App.css';\n//import Listitems from './Listitems'\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state= {\n      items:[],\n      currentItem: {\n        text:'',\n        key:''\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n    \n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem =this.state.currentItem;\n    //console.log(newItem);\n    if(newItem.text !==\"\"){\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem:{\n      text: e.target.value,\n      key: Date.now()\n      }\n    })\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item =>\n      item.key!==key);\n      this.setState({\n        items:filteredItems\n      })\n  }\n\n  setUpdate(text, key){\n   // console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n       // console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  \n\n  render(){\n    return(\n      <div className=\"App\">\n      <header>\n        <h1>To-Do App</h1>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Type...\" value={this.state.currentItem.text} onChange={this.handleInput} />\n          <button type=\"submit\">Add</button>\n\n        </form>\n      </header>\n      <ListItems items = {this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\n      <h6>&copy;KARMILAN</h6>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","E:\\todolist-react\\todo-app\\src\\reportWebVitals.js",[],"E:\\todolist-react\\todo-app\\src\\Listitems.js",[],"E:\\todolist-react\\todo-app\\src\\ListItems.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":64,"column":19,"nodeType":"33","messageId":"34","endLine":64,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]